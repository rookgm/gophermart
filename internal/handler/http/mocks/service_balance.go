// Code generated by MockGen. DO NOT EDIT.
// Source: balance.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rookgm/gophermart/internal/models"
)

// MockBalanceService is a mock of BalanceService interface.
type MockBalanceService struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceServiceMockRecorder
}

// MockBalanceServiceMockRecorder is the mock recorder for MockBalanceService.
type MockBalanceServiceMockRecorder struct {
	mock *MockBalanceService
}

// NewMockBalanceService creates a new mock instance.
func NewMockBalanceService(ctrl *gomock.Controller) *MockBalanceService {
	mock := &MockBalanceService{ctrl: ctrl}
	mock.recorder = &MockBalanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceService) EXPECT() *MockBalanceServiceMockRecorder {
	return m.recorder
}

// BalanceWithdrawal mocks base method.
func (m *MockBalanceService) BalanceWithdrawal(ctx context.Context, withdraw *models.Withdraw) (*models.Withdraw, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BalanceWithdrawal", ctx, withdraw)
	ret0, _ := ret[0].(*models.Withdraw)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BalanceWithdrawal indicates an expected call of BalanceWithdrawal.
func (mr *MockBalanceServiceMockRecorder) BalanceWithdrawal(ctx, withdraw interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BalanceWithdrawal", reflect.TypeOf((*MockBalanceService)(nil).BalanceWithdrawal), ctx, withdraw)
}

// GetBalance mocks base method.
func (m *MockBalanceService) GetBalance(ctx context.Context, userID uint64) (models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, userID)
	ret0, _ := ret[0].(models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockBalanceServiceMockRecorder) GetBalance(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockBalanceService)(nil).GetBalance), ctx, userID)
}

// GetWithdrawals mocks base method.
func (m *MockBalanceService) GetWithdrawals(ctx context.Context, userID uint64) ([]models.Withdraw, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawals", ctx, userID)
	ret0, _ := ret[0].([]models.Withdraw)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawals indicates an expected call of GetWithdrawals.
func (mr *MockBalanceServiceMockRecorder) GetWithdrawals(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawals", reflect.TypeOf((*MockBalanceService)(nil).GetWithdrawals), ctx, userID)
}
